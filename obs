Express
É um framework Node mais popular e a biblioteca subjacente para uma série de outros frameworks Node.
npm install express

O Express oferece soluções para:
-Gerenciar requisições de diferentes verbos HTTP(get, post, delete, put)
-Integrar 'views engines' para inserir dados nos templates
-Definir as configurações comuns da aplicação web, como a porta a ser usada para
conexão e a localização dos modelos que são usados para renderizar a resposta

EJS
É uma engine de visualização, com ele conseguimos de uma maneira mais fácil e simples transportar dados
do back-end para o front-end, basicamente conseguimos utilizar códigos em javascript no html de nossas páginas
//npm install ejs

Nodemon 
É um ultilitário que irá monitorar todas as  alterações nos arquivos de sua aplicação 
e reiniciar automaticamente o servidor quando for necessário
//npm instal --g nodemon

A importancia dos modulos 
Permitem organizar melhor nosso codigo isolando algumas partes que possam ser reutilizados em nossas aplicações,
ou até mesmo em outros, inclusive disponibilizando para a internet, por exemplo o Express e o EJS

Para iniciar o package.json:
    npm init -y


Reestruturação do projeto para melhor organizaçãp

criar a pasta app na raiz do projeto e mover a pasta view para dentro da mesma 
criar a pasta routes dentro da pasta app - obs: routes corresponde as rotas do projeto
Para cada view criaremos uma rota ex: home.js, noticia.js e form_add_noticia.js

Mover os respectivos códigos de rota do arquivo app.js para o correspondente de routes

Em server.js acrescentar o novo caminho de view
app.set('views', './app/views')

Para usar css e vanillaJS cria-se a pasta 'public' e dentro dela os arquivos de css e js
código no server.js:
app.use(express.static('public'))
app.use('/css', express.static(__dirname + 'public/css'))
app.use('/js', express.static(__dirname + 'public/js'))

chamar as rotas em app.js
exemplo:
const rotaHome = require('./app/routes/home')(app)

MVC (Model, view, Controller) - PADRÃO DE ARQUITETURA


Mysql

Para executar no xampp
c:xampp/mysql/bin>


executar os comandos para acessar o gerenciador mysql
mysql -h localhost -u root  <Enter>

#listando todos os bancos de dados
show databases;
#criando um banco de dados
create database noticiasdb
#Entrar no banco de dados
use noticiasdb
#Listando as tables existentes
show tables;
#criar tables
create table noticias(id_noticia int not null primary key auto_increment,
                        titulo varchar(100), noticia text,
                        data_criacao timestamp default current_timestamp);
show tables:
#inserir dados
insert into noticias (titulo, noticia) values ('titulo da noticia',
                                                'conteudo da noticia');

#listar dados
select * from noticias

#instalar o modulo mysql (qualquer prompt de comando)
uma vez dentro da pasta do projeto...
npm install mysql

#Instalação do Consign

Uma vez instalado e configurado o consign posso eliminar os chamamentos de rotas 

// chamando as rotas 
// const rotaHome = require ('./app/routes/home')
// rotaHome(app)
// const rotaHome = require('./app/routes/home')(app)

// const rotaNoticia = require('./app/routes/noticias')(app)

// const rotaFormNoticia = require('./app/routes/form_add_noticia')(app)